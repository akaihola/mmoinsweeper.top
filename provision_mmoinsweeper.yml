---

# Make sure the `ansible` user has been created
# by running the `first_run.yml` playbook once.
#
# Run this playbook with the following command:
# ansible-playbook -i inventory.yml provision_mmoinsweeper.yml --ask-vault-pass

- name: Provision MMOInsweeper Server
  hosts: all
  become: yes
  vars_files:
    - vault.yml
  vars:
    ansible_ssh_private_key_file: "~/.ssh/id_ed25519"
    branch: ""
    domain_name: "mmoinsweeper.top"

  tasks:
    - name: Ensure ansible user exists
      user:
        name: ansible
        state: present
        groups: sudo
        shell: /bin/bash

    - name: Set up authorized keys for ansible user
      authorized_key:
        user: ansible
        key: "{{ lookup('file', '~/.ssh/id_ed25519.pub') }}"

    - name: Ensure ansible user has passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^ansible ALL='
        line: 'ansible ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Update SSH configuration to disable root login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
      notify: Restart SSH

    - name: Ensure SSH is restarted
      meta: flush_handlers

    - name: Install unzip
      apt:
        name: unzip
        state: present
        update_cache: yes

    - name: Debug SSH connection
      debug:
        msg: "Connecting with user: {{ ansible_user }}, using key: {{ ansible_ssh_private_key_file }}"

    - name: Create mmoinsweeper user
      user:
        name: mmoinsweeper
        state: present
        groups: sudo
        shell: /bin/bash

    - name: Set up authorized keys for mmoinsweeper user
      authorized_key:
        user: mmoinsweeper
        state: present
        key: "{{ lookup('file', '~/.ssh/id_ed25519.pub') }}"

    - name: Ensure sudo group has passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Install Nginx
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Install Certbot and Nginx plugin
      apt:
        name:
          - certbot
          - python3-certbot-nginx
        state: present

    - name: Create Certbot webroot directory
      file:
        path: /var/www/certbot
        state: directory
        mode: '0755'

    - name: Configure Nginx for HTTP
      template:
        src: nginx_http.conf.j2
        dest: /etc/nginx/sites-available/{{ domain_name }}
      notify: Reload Nginx

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/{{ domain_name }}
        dest: /etc/nginx/sites-enabled/{{ domain_name }}
        state: link
      notify: Reload Nginx

    - name: Reload Nginx to apply HTTP configuration
      meta: flush_handlers

    - name: Obtain SSL certificate
      command: certbot certonly --webroot -w /var/www/certbot -d {{ domain_name }} --non-interactive --agree-tos --email {{ certbot_email }}
      args:
        creates: /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem

    - name: Configure Nginx for HTTPS
      template:
        src: nginx_https.conf.j2
        dest: /etc/nginx/sites-available/{{ domain_name }}
      notify: Reload Nginx

    - name: Create directory for mmoinsweeper static content
      file:
        path: /var/www/mmoinsweeper.top
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Download and extract mmoinsweeper static content
      unarchive:
        src: https://github.com/akaihola/mmoinsweeper/releases/latest/download/mmoinsweeper-static-content.zip
        dest: /var/www/mmoinsweeper.top
        remote_src: yes
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Download latest mmoinsweeper binary
      get_url:
        url: https://github.com/akaihola/mmoinsweeper/releases/latest/download/mmoinsweeper
        dest: /usr/local/bin/mmoinsweeper
        mode: '0755'
        owner: root
        group: root

    - name: Create systemd service file
      template:
        src: mmoinsweeper.service.j2
        dest: /etc/systemd/system/mmoinsweeper.service
      notify: Reload systemd

    - name: Start and enable mmoinsweeper service
      systemd:
        name: mmoinsweeper
        state: restarted
        enabled: yes

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Restart SSH
      service:
        name: ssh
        state: restarted
